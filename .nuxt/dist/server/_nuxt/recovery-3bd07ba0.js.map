{"version":3,"file":"recovery-3bd07ba0.js","sources":["../../../../pages/auth/recovery.vue"],"sourcesContent":["<script setup>\n\n    const appStore = useAppStore();\n    const wait = ref(false);\n    const router = useRouter();\n\n    const runtimeConfig = useRuntimeConfig();\n    const API_URL = runtimeConfig.public.API_URL;\n\n    const submitForm= async () => {\n        v$.value.$validate();\n        if(!v$.value.$error){\n            wait.value = true;\n            const email = formData.email;\n            await useFetch(`${API_URL}/auth/recovery`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: {\n                   email \n                },\n                onResponse({response}){\n                    if(response.status == 200){\n                        appStore.setAlert(true, 'success', 'E-mail enviado. Vá a sua caixa de entrada, verifique o spam.')\n                        router.push(\"/auth/signin\")\n                    }\n                    else if (response.status == 404 ){\n                        appStore.setAlert(true, 'error', 'Usuário não encontrado.')\n                    }\n                    else{\n                        appStore.setAlert(true, 'error', 'Houve um problema. O e-mail não foi enviado.')\n                    }\n                    wait.value = false;\n                }\n            })\n        }\n    }\n\n    const formData = reactive({\n        email: '',\n    });\n\n    import { required, email, helpers} from \"@vuelidate/validators\";\n\n    const rules = computed(() => {\n        return {\n            email: { \n                required: helpers.withMessage('Preencha o e-mail', required), \n                email: helpers.withMessage('Formato de e-mail inválido', email)\n            }\n        }\n    })\n\n    import { useVuelidate  } from \"@vuelidate/core\";\n    import { useAppStore } from \"~/store/appStore\";\n    const v$ = useVuelidate(rules, formData);\n</script>\n\n<template>\n    <NuxtLayout name=\"auth\">\n        <template #content>\n            <div>\n                <form action=\"\" class=\"py-6\">\n                    <h1 class=\"text-center pb-6\">Recuperar senha</h1>\n                    <div class=\"pb-6\">\n                        <Input name=\"email\" type=\"email\" label=\"E-mail\" placeholder=\"Digite aqui seu e-mail\" @update:model-value=\"formData.email = $event\" />\n                        <span class=\"text-error font-medium text-xs\" v-if=\"v$.email.$error\">{{ v$.email.$errors[0].$message }}</span>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-secondary text-neutral-50 w-full\" @click=\"submitForm\">Recuperar</button>\n                </form>\n                <p class=\"text-sm text-center pb-4\">Lembrou a senha? <NuxtLink to=\"/auth/signin\"><span class=\"font-semibold ml-2\">Entrar</span></NuxtLink></p>\n                <div v-show=\"wait\" class=\"flex flex-col items-center\">\n                    <span class=\"loading loading-spinner loading-md mb-2\"></span>\n                    <p class=\"text-xs\">Aguarde um instante</p>\n                </div>\n            </div>\n        </template>\n    </NuxtLayout>\n</template>"],"names":["email"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEI,UAAM,WAAW;AACjB,UAAM,OAAO,IAAI,KAAK;AACtB,UAAM,SAAS;AAEf,UAAM,gBAAiC;AACvC,UAAM,UAAU,cAAc,OAAO;AAErC,UAAM,aAAY,YAAY;AAC1B,SAAG,MAAM;AACT,UAAG,CAAC,GAAG,MAAM,QAAO;AAChB,aAAK,QAAQ;AACb,cAAMA,SAAQ,SAAS;AACvB,cAAM,SAAS,GAAG,yBAAyB;AAAA,UACvC,QAAQ;AAAA,UACR,SAAS,EAAC,gBAAgB,mBAAkB;AAAA,UAC5C,MAAM;AAAA,YACH,OAAAA;AAAA,UACF;AAAA,UACD,WAAW,EAAC,SAAQ,GAAE;AAClB,gBAAG,SAAS,UAAU,KAAI;AACtB,uBAAS,SAAS,MAAM,WAAW,8DAA8D;AACjG,qBAAO,KAAK,cAAc;AAAA,YAC7B,WACQ,SAAS,UAAU,KAAK;AAC7B,uBAAS,SAAS,MAAM,SAAS,yBAAyB;AAAA,YAC7D,OACG;AACA,uBAAS,SAAS,MAAM,SAAS,8CAA8C;AAAA,YAClF;AACD,iBAAK,QAAQ;AAAA,UAChB;AAAA,QACL,GAAA,aAAC;AAAA,MACJ;AAAA,IACJ;AAED,UAAM,WAAW,SAAS;AAAA,MACtB,OAAO;AAAA,IACf,CAAK;AAID,UAAM,QAAQ,SAAS,MAAM;AACzB,aAAO;AAAA,QACH,OAAO;AAAA,UACH,UAAU,QAAQ,YAAY,qBAAqB,QAAQ;AAAA,UAC3D,OAAO,QAAQ,YAAY,8BAA8B,KAAK;AAAA,QACjE;AAAA,MACJ;AAAA,IACT,CAAK;AAID,UAAM,KAAK,aAAa,OAAO,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}