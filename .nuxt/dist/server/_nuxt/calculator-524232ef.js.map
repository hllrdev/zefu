{"version":3,"file":"calculator-524232ef.js","sources":["../../../../pages/calculator.vue"],"sourcesContent":["<script setup>\n    import { useAppStore } from \"~/store/appStore\";\n    const appStore = useAppStore();\n\n    const formData = reactive({ \n        age: 0,\n        height: 0,\n        weight: 0,\n        sex: ''\n    })\n\n    const quantityMacros = reactive({\n        carbs: 0,\n        fat: 0,\n        protein: 0\n    });\n\n    const goal = ref(null);\n    const results = ref(false);\n\n    const recommendedKcal = computed(() => {\n        return Math.round((quantityMacros.carbs * 4 * formData.weight) +\n         (quantityMacros.protein * 4 * formData.weight) + (quantityMacros.fat * 9 * formData.weight))\n    });\n\n    const tmb = computed(() => {\n        if(formData.age && formData.height && formData.weight && formData.sex){\n            results.value = true;\n            if(formData.sex == \"MALE\")\n                return Math.round(88.362 + (13.397 * formData.weight) + (4.799 * formData.height) - (5.677 * formData.age));\n            return Math.round(447.593 + (9.247 * formData.weight) + (3.098 * formData.height) - (4.33 * formData.age));\n        }\n        return 0;\n    });\n\n    const imc = () => {\n        const height = formData.height / 100;\n        return formData.weight / (height * height);\n    }\n\n    const macrosCalc = () => {\n        if(imc() >= 30)\n            quantityMacros.protein = 1.6;\n        else\n            quantityMacros.protein = 2;\n\n        quantityMacros.fat = 0.6;\n\n        if(goal.value == \"cutting\")\n            quantityMacros.carbs = 2.5;\n        else if (goal.value == \"bulking\")\n            quantityMacros.carbs = 3.5;\n        else //maintenance\n            quantityMacros.carbs = 3;\n    }\n\n    watch(goal, () => {\n        \n        if((!formData.weight || !formData.height || !formData.age || !formData.sex)){\n            appStore.setAlert(true, 'warning', 'Preencha todos os campos para receber a sugestão.');\n            return;\n        }\n\n        macrosCalc();\n    })\n\n    const macrosSuggestion = computed(() => {\n        if(goal.value && formData.weight && formData.height && formData.age && formData.sex){\n            macrosCalc();\n            return true;\n        }\n        return false;\n    })\n\n</script>\n\n<template>\n    <NuxtLayout name=\"main\">\n        <template #content>\n            <div class=\"pt-24 px-4 pb-10\">\n                <h1 class=\"text-center\">Calculadora</h1>\n                <h2 class=\"text-center font-semibold uppercase text-sm pb-6\">\n                    macros, taxa metabólica basal (tmb) e gasto energético total (get)\n                </h2>\n                <div class=\"flex justify-center\">\n                    <div class=\"md:w-4/5 lg:w-3/5\">\n                        <h3>Para calcular a TMB e o GET preencha os campos a seguir.</h3>\n                        <form action=\"\" class=\"py-4\">\n                            <Input name=\"age\" type=\"number\" label=\"Qual a sua idade?\" placeholder=\"Digite aqui sua idade\" @update:model-value=\"formData.age = $event\" class=\"pb-2\" />\n                            <Input name=\"height\" type=\"number\" label=\"Qual a sua altura? (cm)\" placeholder=\"Digite aqui sua altura\" @update:model-value=\"formData.height = $event\" class=\"pb-2\" />\n                            <Input id=\"weight\" name=\"weight\" type=\"number\" label=\"Qual o seu peso?\" placeholder=\"Digite aqui seu peso\" @update:model-value=\"formData.weight = $event\" class=\"pb-2\"/>\n                            <div class=\"md:max-w-xs\">\n                                <label class=\"label\">\n                                    <span class=\"label-text font-semibold\">Qual o seu sexo?</span>\n                                </label>\n                                <div class=\"form-control\">\n                                    <label class=\"label cursor-pointer\">\n                                        <span class=\"label-text\">Feminino</span> \n                                        <input type=\"radio\" class=\"radio radio-primary\" value=\"FEMALE\" v-model=\"formData.sex\" />\n                                    </label>\n                                </div>\n                                <div class=\"form-control\">\n                                    <label class=\"label cursor-pointer\">\n                                        <span class=\"label-text\">Masculino</span> \n                                        <input type=\"radio\" class=\"radio radio-primary\" value=\"MALE\" v-model=\"formData.sex\"/>\n                                    </label>\n                                </div>\n                            </div>\n                        </form>\n                        <div v-show=\"results\" class=\"pb-4\">\n                            <h2 class=\"text-center\">Taxa metabólica basal (TMB)</h2>\n                            <p class=\"text-center py-4 text-lg text-neutral-50\"><span class=\"text-8xl font-bold\">{{ tmb }}</span>kcal</p>\n                            <p class=\"text-justify\">A taxa metabólica basal corresponde ao quanto de calorias\n                                você gasta apenas em repouso, sem contabilizar nenhuma atividade do seu dia.\n                            </p>\n                            <h2 class=\"text-center py-4 text-white\">Gasto energético total (GET)</h2>\n                            <p class=\"pb-4 text-justify\">O gasto energético total corresponde ao quanto de calorias\n                                você gasta somando a TMB + seu nível de atividade. Os níveis de atividade são apenas estimativas,\n                                sendo que a mensuração do esforço realizado é subjetivo.\n                            </p>\n                            <!-- table -->\n                            <div class=\"overflow-x-auto\">\n                                <table class=\"table\">\n                                    <thead>\n                                        <tr class=\"text-neutral-50\">\n                                            <th></th>\n                                            <th>Nível de atividade</th>\n                                            <th>Calorias</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th>1</th>\n                                            <td>Sedentário</td>\n                                            <td><span>{{ Math.round(tmb * 1.15) }}</span> kcal</td>\n                                        </tr>\n                                        <tr>\n                                            <th>2</th>\n                                            <td>Moderado</td>\n                                            <td><span>{{ Math.round(tmb * 1.3) }}</span> kcal</td>\n                                        </tr>\n                                        <tr>\n                                            <th>3</th>\n                                            <td>Alto</td>\n                                            <td><span>{{ Math.round(tmb * 1.5) }}</span> kcal</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <h2 class=\"text-center py-4\">Sugestão de macronutrientes</h2>\n                        <p class=\"pb-4 text-justify\">A sugestão de macros possui valores conservadores para\n                            um início de dieta, conforme progressão deve-se atualizar a quantidade em especial \n                            dos carboidratos. Ela leva em conta apenas o peso do indivíduo e seu objetivo. Dessa forma,\n                            você pode realizar a comparação com os valores indicados pela TMB e GET e ajustar caso ache\n                            necessário.\n                        </p>\n                        <h3 class=\"pb-2 font-semibold\">Qual seu objetivo atualmente?</h3>\n                        <div class=\"flex flex-wrap justify-center gap-2 pt-4 pb-8\">\n                            <input v-model=\"goal\" class=\"btn w-full md:btn-wide\" type=\"radio\" value=\"cutting\" aria-label=\"Perder gordura\"/>\n                            <input v-model=\"goal\" class=\"btn w-full md:btn-wide\" type=\"radio\" value=\"maintenance\" aria-label=\"Recomposição corporal/Manutenção\" />\n                            <input v-model=\"goal\" class=\"btn w-full md:btn-wide\" type=\"radio\" value=\"bulking\" aria-label=\"Ganhar massa\" />\n                        </div>\n                        <div v-show=\"macrosSuggestion\">\n                            <h4 class=\"text-sm font-semibold pb-2\">Carboidratos - {{ quantityMacros.carbs }}g/kg ({{ Math.round(formData.weight * quantityMacros.carbs) }} g)</h4>\n                            <input type=\"range\" min=\"0\" max=\"8\" step=\"0.5\" v-model=\"quantityMacros.carbs\" class=\"range range-warning\" />\n                            <h4 class=\"text-sm font-semibold pb-2\">Gordura - {{ quantityMacros.fat }}g/kg ({{ Math.round(formData.weight * quantityMacros.fat) }} g)</h4>\n                            <input type=\"range\" min=\"0\" max=\"8\" step=\"0.1\" v-model=\"quantityMacros.fat\" class=\"range range-accent\" />\n                            <h4 class=\"text-sm font-semibold pb-2\">Proteína - {{ quantityMacros.protein }}g/kg ({{ Math.round(formData.weight * quantityMacros.protein) }} g)</h4>\n                            <input type=\"range\" min=\"0\" max=\"8\" step=\"0.25\" v-model=\"quantityMacros.protein\" class=\"range range-error\" />\n                            <p class=\"text-center py-4 text-lg\"><span class=\"text-8xl font-bold\">{{ recommendedKcal }}</span>kcal</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </template>\n    </NuxtLayout>\n</template>\n\n<style scoped>\n    tbody tr td span {\n        font-weight: 700;\n    }\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEI,UAAM,WAAW;AAEjB,UAAM,WAAW,SAAS;AAAA,MACtB,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,KAAK;AAAA,IACb,CAAK;AAED,UAAM,iBAAiB,SAAS;AAAA,MAC5B,OAAO;AAAA,MACP,KAAK;AAAA,MACL,SAAS;AAAA,IACjB,CAAK;AAED,UAAM,OAAO,IAAI,IAAI;AACrB,UAAM,UAAU,IAAI,KAAK;AAEzB,UAAM,kBAAkB,SAAS,MAAM;AACnC,aAAO,KAAK,MAAO,eAAe,QAAQ,IAAI,SAAS,SACrD,eAAe,UAAU,IAAI,SAAS,SAAW,eAAe,MAAM,IAAI,SAAS,MAAO;AAAA,IACpG,CAAK;AAED,UAAM,MAAM,SAAS,MAAM;AACvB,UAAG,SAAS,OAAO,SAAS,UAAU,SAAS,UAAU,SAAS,KAAI;AAClE,gBAAQ,QAAQ;AAChB,YAAG,SAAS,OAAO;AACf,iBAAO,KAAK,MAAM,SAAU,SAAS,SAAS,SAAW,QAAQ,SAAS,SAAW,QAAQ,SAAS,GAAI;AAC9G,eAAO,KAAK,MAAM,UAAW,QAAQ,SAAS,SAAW,QAAQ,SAAS,SAAW,OAAO,SAAS,GAAI;AAAA,MAC5G;AACD,aAAO;AAAA,IACf,CAAK;AAED,UAAM,MAAM,MAAM;AACd,YAAM,SAAS,SAAS,SAAS;AACjC,aAAO,SAAS,UAAU,SAAS;AAAA,IACtC;AAED,UAAM,aAAa,MAAM;AACrB,UAAG,IAAK,KAAI;AACR,uBAAe,UAAU;AAAA;AAEzB,uBAAe,UAAU;AAE7B,qBAAe,MAAM;AAErB,UAAG,KAAK,SAAS;AACb,uBAAe,QAAQ;AAAA,eAClB,KAAK,SAAS;AACnB,uBAAe,QAAQ;AAAA;AAEvB,uBAAe,QAAQ;AAAA,IAC9B;AAED,UAAM,MAAM,MAAM;AAEd,UAAI,CAAC,SAAS,UAAU,CAAC,SAAS,UAAU,CAAC,SAAS,OAAO,CAAC,SAAS,KAAK;AACxE,iBAAS,SAAS,MAAM,WAAW,mDAAmD;AACtF;AAAA,MACH;AAED;IACR,CAAK;AAED,UAAM,mBAAmB,SAAS,MAAM;AACpC,UAAG,KAAK,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,OAAO,SAAS,KAAI;AAChF;AACA,eAAO;AAAA,MACV;AACD,aAAO;AAAA,IACf,CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}