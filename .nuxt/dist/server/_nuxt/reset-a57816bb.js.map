{"version":3,"file":"reset-a57816bb.js","sources":["../../../../pages/auth/reset.vue"],"sourcesContent":["<script setup>\n    const appStore = useAppStore();\n    const route = useRoute();\n    const router = useRouter();\n\n    const runtimeConfig = useRuntimeConfig();\n    const API_URL = runtimeConfig.public.API_URL;\n\n    const submitForm = async () => {\n        v$.value.$validate();\n        if(!v$.value.$error){\n            const password = formData.password;\n            await useFetch(`${API_URL}/auth/reset`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json', \n                    'Authorization': 'Bearer ' + route.query.token\n                },\n                body: {\n                    password\n                },\n                onResponse({response}) {\n                    if(response.status == 200){\n                        appStore.setAlert(true, 'success', 'Senha resetada com sucesso!')\n                        router.push(\"/auth/signin\")\n                    }\n                    else{\n                        appStore.setAlert(true, 'error', 'Houve um problema. A senha não foi resetada.')\n                    }\n                }\n            })\n        }\n    }\n\n    const formData = reactive({\n        password: '',\n        confirmPassword: ''\n    });\n\n    import { required, sameAs, minLength, helpers} from \"@vuelidate/validators\";\n\n    const rules = computed(() => {\n        return {\n            password: { \n                required: helpers.withMessage('Preencha o e-mail', required), \n                minLength: helpers.withMessage('É preciso no minímo 6 caracteres', minLength(6))\n            },\n            confirmPassword: { \n                required: helpers.withMessage('Preencha o e-mail', required), \n                sameAs: helpers.withMessage('As senhas são diferentes', sameAs(formData.password))\n            }\n        }\n    })\n\n    import { useVuelidate  } from \"@vuelidate/core\";\n    import { useAppStore } from \"~/store/appStore\";\n    const v$ = useVuelidate(rules, formData);\n\n    \n</script>\n\n<template>\n    <NuxtLayout name=\"auth\">\n        <template #content>\n            <div>\n                <form action=\"\" class=\"py-6\">\n                    <h1 class=\"text-center pb-6\">Resetar senha</h1>\n                    <div class=\"mb-1\">\n                        <Input name=\"password\" type=\"password\" label=\"Senha\" placeholder=\"Digite a nova senha\" @update:model-value=\"formData.password = $event\"/>\n                        <span class=\"text-error font-medium text-xs\" v-if=\"v$.password.$error\">{{ v$.password.$errors[0].$message }}</span>\n                    </div>\n                    <div class=\"pb-6\">\n                        <Input name=\"confirmPassword\" type=\"password\" label=\"Confirmar senha\" placeholder=\"Digite a senha novamente\" @update:model-value=\"formData.confirmPassword = $event\"/>\n                        <span class=\"text-error font-medium text-xs\" v-if=\"v$.confirmPassword.$error\">{{ v$.confirmPassword.$errors[0].$message }}</span>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-secondary w-full text-neutral-50\" @click=\"submitForm\">Resetar</button>\n                </form>\n            </div>\n        </template>\n    </NuxtLayout>\n</template>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACI,UAAM,WAAW;AACjB,UAAM,QAAQ;AACd,UAAM,SAAS;AAEf,UAAM,gBAAiC;AACvC,UAAM,UAAU,cAAc,OAAO;AAErC,UAAM,aAAa,YAAY;AAC3B,SAAG,MAAM;AACT,UAAG,CAAC,GAAG,MAAM,QAAO;AAChB,cAAM,WAAW,SAAS;AAC1B,cAAM,SAAS,GAAG,sBAAsB;AAAA,UACpC,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,YAChB,iBAAiB,YAAY,MAAM,MAAM;AAAA,UAC5C;AAAA,UACD,MAAM;AAAA,YACF;AAAA,UACH;AAAA,UACD,WAAW,EAAC,SAAQ,GAAG;AACnB,gBAAG,SAAS,UAAU,KAAI;AACtB,uBAAS,SAAS,MAAM,WAAW,6BAA6B;AAChE,qBAAO,KAAK,cAAc;AAAA,YAC7B,OACG;AACA,uBAAS,SAAS,MAAM,SAAS,8CAA8C;AAAA,YAClF;AAAA,UACJ;AAAA,QACL,GAAA,aAAC;AAAA,MACJ;AAAA,IACJ;AAED,UAAM,WAAW,SAAS;AAAA,MACtB,UAAU;AAAA,MACV,iBAAiB;AAAA,IACzB,CAAK;AAID,UAAM,QAAQ,SAAS,MAAM;AACzB,aAAO;AAAA,QACH,UAAU;AAAA,UACN,UAAU,QAAQ,YAAY,qBAAqB,QAAQ;AAAA,UAC3D,WAAW,QAAQ,YAAY,oCAAoC,UAAU,CAAC,CAAC;AAAA,QAClF;AAAA,QACD,iBAAiB;AAAA,UACb,UAAU,QAAQ,YAAY,qBAAqB,QAAQ;AAAA,UAC3D,QAAQ,QAAQ,YAAY,4BAA4B,OAAO,SAAS,QAAQ,CAAC;AAAA,QACpF;AAAA,MACJ;AAAA,IACT,CAAK;AAID,UAAM,KAAK,aAAa,OAAO,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}